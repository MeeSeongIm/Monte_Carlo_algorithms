Percolation [an union-find application].

Consider an $N \times N$ grid of blocks; each block is a called a site. 
Each site is open (not shaded) with probability p or blocked (shaded) with probability 1-p. 
A system percolates if and only if a block on the top row of the grid and a block on the bottom row of the grid 
are connected by open sites, where two adjacent blocks are connected if and only if both are open.

Application (four scenarios are given using a, b, c, d): 
MODEL
a. electricity
b. fluid flow
c. social interaction
d. rock fractures from earthquakes

WHAT DOES THE SYSTEM REPRESENT?
a. material
b. material
c. population
d. fracture networks

VACANT SITE IS 
a. conductor
b. empty
c. person
d. fractures

OCCUPIED SITE IS
a. insulated
b. blocked
c. empty
d. crystalline rock

INTERPRETATION OF PERCOLATES
a. conducts
b. porous
c. communicates
d. connectivity of the network

 
Given a randomized model, i.e., a site is vacant with a given probability, if the probability is low, 
then there is a good chance that the system will not percolate. 
On the other hand, if the probability is high, then there is a good chance that the system will percolate. 
When this probability is somewhere in the middle, it is an open question (in mathematics and in physics) 
on determining whether or not the system percolates. 

Percolation phase transition: 
When N >> 0, this theory guarantees the existence of a sharp threshold p* such that the following holds: 
1. when p > p*, the system almost certainly percolates, 
2. when p < p*, the system almost certainly does not percolate. 

Open problem: determine the value of p*. 

Using mathematical models: this is still an open problem.

Computational approach: run simulations to determine p* using fast union-find algorithms. 

More precisely, initialize the entire $N\times N$ grid to be blocked. 
Program random sites to be open until a block on the top of the grid is connected to a block on the bottom of the grid.
The moment when the system percolates, stop the Monte Carlo simulation and estimate the threshold value p*, 
which is the vacancy percentage of the system. 
Iterate until satisfied to obtain a better estimate of p*. 

Grid-Graph duality:
How does one check whether or not an $N\times N$ system percolates? 
Create a node (a vertex) corresponding to each site and name them 0 to N^2-1. 
We say that sites are in the same component if and only if they are connected by open sites, 
and whenever two sites are connected by open sites, we put an edge to the corresponding nodes.

Example: N = 5. The symbol X represents a blocked site while the empty space represents an open site.
[ , ,X, ,X]
[X,X,X, ,X]
[X, ,X, , ]
[ ,X, ,X,X]
[ , ,X, , ]

o-o o o o
      |
o o o o o
      |
o o o o-o

o o o o o
|
o-o o o-o

Thus checking when a system percolates is equivalent to checking 
if a path exists from a node in the top row to a node in the bottom row.
This brute-force algorithm calls connected() N^2 times for we need to check 
if any of the nodes in the top row is connected to any of the nodes in the bottom row.
This algorithm takes up too much memory (and is too slow) when N is large. 
Instead, we use a trick by creating a virtual site on the top and on the bottom. 

A virtual top site is created as follows: 
create a node above the top row and connect it to each of the nodes in the top row. 
Similarly, a virtual bottom site is created by adding a new node below the bottom row 
and connect it to each of the nodes in the bottom row.
Thus to check whether or not a system percolates, we only need to check 
whether the virtual top site is connected to the virtual bottom site. 

To model opening a new site, we connect the corresponding node to all adjacent nodes 
(left, right, top, bottom) with an edge (we need to implement at most 4 calls to connected()).
 
NOTE: a graph (whether it's weighted, directed, etc) could be represented using an adjacency matrix. 
We know from above that a system percolates if
* a block along the top row of a grid is connected to a block along the bottom row of a grid by open sites, or 
* a node on the top row of a graph is connected to a node on the bottom row of a graph by edges, or 
* the top virtual site is connected to the bottom virtual site by a path.

(POSSIBLY OPEN) QUESTION: what class of (adjacency) matrices guarantee a percolating system? 
Or better yet, describe all matrices which represent a percolating system.


